# This workflow will install python dependencies for poetry project, lint and run tests using Python 3.10
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions


name: Database Migrations (BQ)

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  migrate:
    runs-on: ubuntu-latest
    
    steps:
    -
      name: Checkout Repo
      uses: actions/checkout@v3
    -
      name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    -
      name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.14
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - 
      name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - 
      name: Install library dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    -
      name: Install library
      run: poetry install --no-interaction
    # -
    #   name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - 
      name: Run tests
      run: |
        source .venv/bin/activate
        bash run-tests.sh

    -
      name: Echo branch name or tag
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
